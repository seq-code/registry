<h1><%= @name.name_html %></h1>
<h3>&raquo; Etymology of the word <u><b><%= @name.last_epithet %></b></u></h3>
<hr/>

<div class="mt-3 mb-4">
  <% if @name.can_autofill_etymology? || !@name.syllabication? %>
    <% pars = {} %>
    <% pars[:tutorial] = @tutorial.id if @tutorial %>
    <%= link_to(
          autofill_etymology_name_path(@name, pars),
          class: 'btn btn-primary'
        ) do %>
      <%= fa_icon('magic') %> &nbsp;
      Automatically fill the etymology
    <% end %>
  <% end %>
  <%= help_topic('etymology',
        'How do I fill the etymology table?', size: 'xl') %>
  <%= help_topic('dictionary',
        'How do I use dictionary lookups?', size: 'xl') %>
</div>

<%= simple_form_for(@name) do |f| %>
  <%= f.input(:syllabication, label: 'Syllabification', required: false,
        autofocus: true) %>

  <% if @name.autofilled_etymology %>
    <div class="alert alert-info mt-4">
      <% case @name.autofilled_etymology_method %>
      <% when :type_genus %>
        The etymology below was inferred on the basis of the type genus,
        please revise carefully for consistency
      <% when :same_word %>
        The etymology below was inferred on the basis of a shared epithet with
        the name <%= @name.importable_etymology.name_html %>,
        please revise carefully for consistency
      <% end %>
    </div>
  <% end %>

  <br/>
  <table class="table table-hover table-responsive-lg">
    <thead>
      <th>Component</th>
      <th>Language</th>
      <th>Grammar</th>
      <th>Particle</th>
      <th>Description or translation</th>
      <th></th>
    </thead>
    <tbody>
      <%
        components = {
          p1: '1st morpheme', p2: '2nd morpheme', p3: '3rd morpheme',
          p4: '4th morpheme', p5: '5th morpheme', xx: 'Full word'
        }
        fields = { lang: 5, grammar: 15, particle: 15, description: 30 }
      %>
      <% components.each do |k, v| %>
        <tr class='<%= 'table-active' if k == :xx %>'>
          <td><b><%= v %></b></td>
          <% fields.each do |i, size| %>
            <% entry = :"etymology_#{ k }_#{ i }" %>
            <td>
              <% if i == :particle && k == :xx %>
                <%= content_tag(:i, @name.last_epithet, id: "name_#{entry}") %>
              <% else %>
                <%= f.input entry, input_html: { size: size }, label: false %>
              <% end %>
            </td>
          <% end %>
          <td id="name_etymology_<%= k %>_dict"></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <br/>
  <% dict_id = modal('Dictionary lookup', size: 'lg') do %>
  <% end %>
  <script>
    var perseus = "https://www.perseus.tufts.edu/hopper/";

    function dictionary_search(comp) {
      var modal_body = $("#<%= dict_id %> div.modal-body");
      var part = $("#name_etymology_" + comp + "_particle").val();
      var spinner = '<i class="fas fa-spinner fa-spin mr-1"> <i>';
      var definition = $("<div class='definition mb-3'>Looking up " +
        part + "...</div>");
      definition.prepend(spinner);
      var grammar = $("<div class='analyses'>Analysing " + part + "...</div>");
      grammar.prepend(spinner);
      var footer = $("<div></div>");
      footer.append("<hr/>");
      footer.append("Service provided by <a href='" + perseus + "' " +
        "target='_blank'>Perseus Digital Library</a><br/>");
      footer.append("<b>Elem. Lewis</b>: Charlton T. Lewis, An Elementary " +
        "<i>Latin Dictionary</i><br/>");
      footer.append("<b>Lewis & Short</b>: Charlton T. Lewis, Charles Short, " +
        "<i>A Latin Dictionary</i><br/>");

      // Build scaffold
      modal_body.html("");
      modal_body.append(grammar);
      modal_body.append('<hr/>');
      modal_body.append(definition);
      modal_body.append(footer);

      // Launch search
      dictionary_search_grammar(comp, modal_body);
    }

    function dictionary_search_grammar(comp, modal_body) {
      var part = $("#name_etymology_" + comp + "_particle").val();

      // Grammatical options (analysis)
      $.ajax({
        url: perseus + "/xmlmorph",
        data: { lang: 'la', lookup: part },
        dataType: 'xml'
      }).done(function(data) {
        var list = $('<ul></ul>');
        var lemmata = [];
        var texts = [];
        if ($(data).find("analyses analysis").length == 0) {
          list = $('<span class="text-danger ml-4">Term not found</span>');
        } else {
          $(data).find("analyses analysis").each(function() {
            // Parse analysis
            var analysis = $(this);
            var text = "";
            var lemma = analysis.children("lemma").text()
            if (!lemmata.includes(lemma)) lemmata.push(lemma);
            [
              "pos" , "number", "gender", "case", "dialect", "feature"
            ].forEach(function(i) {
              var val = analysis.children(i).text();
              if (!val | val == "sg") return;
              if (i == "case" & val != "gen") return;
              if (i == "pos" & val == "noun") val = "n";
              text = text + " " + val;
              if (i != "dialect") text = text + ".";
            });
            if (texts.includes(text)) return;
            texts.push(text);
            var item = $("<li></li>");
            var lemma_anchor = $(
              '<a href="#" data-lemma="' + lemma + '">' +
                '<i class="far fa-bookmark small"> </i> ' + lemma +
              '</a>'
            );
            lemma_anchor.on("click", function() {
              dictionary_search_definition(comp, modal_body, lemma, 1);
              return false;
            });
            var anchor = $("<span type=button class='badge badge-pill " +
                           "badge-primary ml-2'>use</span>");
            anchor.on("click", function() {
              $("#name_etymology_" + comp + "_grammar").val(text);
            });

            // Build item and add to list
            item.append("<b>" + analysis.children("form").text() + "</b>");
            item.append(text);
            item.append(" (");
            item.append(lemma_anchor);
            item.append(")");
            item.append(anchor);
            list.append(item);
          });
        }
        modal_body.children('.analyses').html('<h2>Grammatical analyses</h2>');
        modal_body.children('.analyses').append(list);
        if (!lemmata.includes(part)) lemmata.push(part);
        dictionary_search_definition(comp, modal_body, lemmata[0], 1);
      }).fail(function() {
        modal_body.children('.analyses')
          .html('<h2>Grammatical analyses</h2>' +
                '<span class="text-danger ml-4">Term not found</span>');
      });
    }

    function dictionary_search_definition(comp, modal_body, part, src) {
      var dicts = ['Perseus:text:1999.04.0059', 'Perseus:text:1999.04.0060'];
      var source_names = ['Lewis & Short', 'Elem. Lewis'];

      // Report process
      var spinner = '<i class="fas fa-spinner fa-spin mr-1 ml-2"> <i>';
      var cont = modal_body.children('.definition');
      cont.append(spinner);
      cont.append("Looking up " + part + "...");
      var bold = "font-weight-bold";
      modal_body.find('.analyses a[data-lemma]').removeClass(bold);
      modal_body.find('.analyses a[data-lemma] i').removeClass('fas');
      modal_body.find('.analyses a[data-lemma] i').removeClass('far');
      modal_body.find('.analyses a[data-lemma="' + part + '"]').addClass(bold);
      modal_body.find('.analyses a[data-lemma="' + part + '"]  i').addClass('fas');
      modal_body.find('.analyses a[data-lemma!="' + part + '"]  i').addClass('far');
      var title = $('<h2 class="input-group">Definition in</h2>');
      var title_src = $(
        '<select class="custom-select ml-2" id="dictionary-title-src"></select>'
      );
      for (var i = 0; i < dicts.length; i++) {
        var title_opt = $(
          '<option value="' + i + '">' + source_names[i] + '</option>'
        );
        if (i == src) title_opt.attr("selected", true);
        title_src.append(title_opt);
      }
      title_src.on("change", function() {
        var new_src = $(this).prop("selectedIndex");
        dictionary_search_definition(comp, modal_body, part, new_src)
      });
      title.append(title_src);
      title.append(
        '<div class="input-group-append">' +
          '<label for="dictionary-title-src" class="input-group-text">' +
          '<i class="fas fa-exchange-alt"> </i></label></div>'
      );

      // Definition
      $.ajax({
        url: perseus + "/loadquery",
        data: { doc: dicts[src] + ':entry=' + part }
      }).done(function(data) {
        // Fix result for embedding
        var result = $(data);
        result.find("a").each(function() {
          var href = $(this).attr("href");
          $(this).attr("href", perseus + href);
        });

        // Parse definitions
        var cont = modal_body.children('.definition');
        cont.html(title);
        var list = $('<ul class="mb-3"></ul>');
        result.find("div.lex_sense > i").each(function() {
          var description = $(this).text();
          if (/[0-9]|^([a-z ]*\.)*$/i.test(description)) return;
          var item = $("<li></li>");
          var anchor = $("<span type=button class='badge badge-pill " +
                         "badge-primary ml-2'>use</span>");
          anchor.on("click", function() {
            $("#name_etymology_" + comp + "_description").val(description);
          });
          item.append(description);
          item.append(anchor);
          list.append(item);
        });
        cont.append(list);

        // Show raw definition
        var def = $(
          '<div class="raw-entry mx-2 p-2 border bg-light mb-2"></div>'
        );
        def.append(result);
        cont.append(def);
      }).fail(function() {
        var cont = modal_body.children('.definition')
        cont.html(title);
        cont.append('<span class="text-danger ml-4">Term not found</span>');
      });
    }

    function dictionary_search_button(comp) {
      var td = $("#name_etymology_" + comp + "_dict");
      td.html('');
      var latin = [
        "", "L", "L.", "Latin", "N.L.", "NL", "NL.", "Neolatin", "Neo Latin",
        "Neo-Latin",
        // The dictionary includes Greek entries
        "Greek", "Gr."
      ];
      var lang = $("#name_etymology_" + comp + "_lang").val();
      if (!latin.includes(lang)) return;

      if (comp == "xx") {
        var part_id = "#name_etymology_xx_particle";
        $(part_id).val($(part_id).text());
      }
      var part = $("#name_etymology_" + comp + "_particle").val();
      if (!part) return;

      var button = $('<span type=button data-toggle=modal' +
        ' data-target="#<%= dict_id %>" class="btn btn-sm btn-info">' +
        '<i class="fas fa-book"> </i></span>');
      button.on("click", function() { dictionary_search(comp); })
      td.html(button);
    }

    $(document).ready(function() {
      const components = [
        <%= raw(components.keys.map { |i| "'#{i}'" }.join(', ')) %>
      ];
      const fields = ['lang', 'particle'];

      components.forEach(function(comp_i) {
        fields.forEach(function(field_i) {
          var id = "name_etymology_" + comp_i + "_" + field_i;
          $("#" + id).on("change", function() {
            dictionary_search_button(comp_i);
          });
        });
        dictionary_search_button(comp_i);
      });
    });
  </script>

  <!--
  <hr/>
  <%=
    f.input(
      :etymology_text,
      as: :rich_text_area,
      label: 'Alternatively, provide a formatted etymology text (optional)'
    )
  %>
  -->
  <br/>

  <% if @tutorial %>
    <%= hidden_field_tag(:return_to, tutorial_path(@tutorial, next: true)) %>
  <% end %>
  <%= link_to('Cancel', @tutorial || @name, class: 'btn btn-secondary') %>
  <%= f.button(:submit, 'Submit') %>
  <br/><br/>
<% end %>
